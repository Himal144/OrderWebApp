// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderWebApp.DataAccess.Data;

#nullable disable

namespace OrderWebApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240901091724_RemigratingAllTheDetails")]
    partial class RemigratingAllTheDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OrderWebApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Gadgets"
                        });
                });

            modelBuilder.Entity("OrderWebApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("ListPrice")
                        .HasColumnType("double");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<double>("Price100")
                        .HasColumnType("double");

                    b.Property<double>("Price50")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Madan Krishna Shrestha",
                            CategoryId = 2,
                            Description = "A gripping Nepali novel that explores human emotions.",
                            ISBN = "978-9937-888-01-1",
                            ImageUrl = "",
                            ListPrice = 500.0,
                            Price = 450.0,
                            Price100 = 400.0,
                            Price50 = 425.0,
                            Title = "Ek Chihan"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Budhathoki Krishna",
                            CategoryId = 1,
                            Description = "A popular Nepali novel about life in rural Nepal.",
                            ISBN = "978-9937-888-02-2",
                            ImageUrl = "",
                            ListPrice = 600.0,
                            Price = 550.0,
                            Price100 = 500.0,
                            Price50 = 525.0,
                            Title = "Karnali Blues"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Narayan Wagle",
                            CategoryId = 3,
                            Description = "A novel set during the Nepalese civil war.",
                            ISBN = "978-9937-888-03-3",
                            ImageUrl = "",
                            ListPrice = 700.0,
                            Price = 650.0,
                            Price100 = 600.0,
                            Price50 = 625.0,
                            Title = "Palpasa Café"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Subin Bhattarai",
                            CategoryId = 2,
                            Description = "A modern Nepali love story.",
                            ISBN = "978-9937-888-04-4",
                            ImageUrl = "",
                            ListPrice = 400.0,
                            Price = 375.0,
                            Price100 = 325.0,
                            Price50 = 350.0,
                            Title = "Summer Love"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Amar Neupane",
                            CategoryId = 1,
                            Description = "A novel about life in the early 20th century Nepal.",
                            ISBN = "978-9937-888-05-5",
                            ImageUrl = "",
                            ListPrice = 550.0,
                            Price = 500.0,
                            Price100 = 450.0,
                            Price50 = 475.0,
                            Title = "Seto Dharti"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Parijat",
                            CategoryId = 1,
                            Description = "A novel exploring human relationships and society.",
                            ISBN = "978-9937-888-06-6",
                            ImageUrl = "",
                            ListPrice = 350.0,
                            Price = 325.0,
                            Price100 = 275.0,
                            Price50 = 300.0,
                            Title = "Sirish Ko Phool"
                        });
                });

            modelBuilder.Entity("OrderWebApp.Models.Product", b =>
                {
                    b.HasOne("OrderWebApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
