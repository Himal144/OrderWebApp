@model ProductVM


<div class="border p-3 mt-4">
    <div class="row ">
        <h2 class="text-primary text-center">@(Model.Product.Id==0?"Create":"Update") Product</h2>
        <hr />
    </div>
   <div class="row">
       <div class="col-md-10">
           <form method="post" enctype="multipart/form-data">
               <input asp-for="Product.Id" hidden/>
    <div class="mb-3 row p-2">
        <label asp-for="Product.Title" class="p-0"></label>
        <input asp-for="Product.Title"  class="form-control" />
          <span asp-validation-for="Product.Title" class="text-danger"></span>
    </div>
      <div class="mb-3 row p-2">
        <label asp-for="Product.Description" class="p-0"></label>
        <textarea asp-for="Product.Description"  class="form-control" ></textarea>
          <span asp-validation-for="Product.Description" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.ISBN" class="p-0"></label>
        <input asp-for="Product.ISBN"  class="form-control" />
          <span asp-validation-for="Product.ISBN" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.Author" class="p-0"></label>
        <input asp-for="Product.Author"  class="form-control" />
          <span asp-validation-for="Product.Author" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.CategoryId" class="p-0"></label>
        <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList"  class="form-control" >
    <option disabled selected>--Select Category</option>
</select>
          <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.ListPrice" class="p-0"></label>
        <input asp-for="Product.ListPrice"  class="form-control" />
          <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
    </div>
   
    <div class="mb-3 row p-2">
        <label asp-for="Product.Price" class="p-0"></label>
        <input asp-for="Product.Price"  class="form-control" />
          <span asp-validation-for="Product.Price" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.Price50" class="p-0"></label>
        <input asp-for="Product.Price50"  class="form-control" />
          <span asp-validation-for="Product.Price50" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.Price100" class="p-0"></label>
        <input asp-for="Product.Price100"  class="form-control" />
          <span asp-validation-for="Product.Price100" class="text-danger"></span>
    </div>
    <div class="mb-3 row p-2">
        <label asp-for="Product.ImageUrl" class="p-0"></label>
        <input type="file" name="file"  class="form-control" />
          
    </div>

    <div class="row">
        <div class=" col-6 col-md-3 my-1 ">
            @if(Model.Product.Id==0){
    <button type="submit" class="btn btn-primary form-control"  > Create</button>
            }
            else{
                      <button type="submit" class="btn btn-primary form-control"  > Update</button>
            }
        </div>
        <div class=" col-6 col-md-3  my-1  text-end">
            <a asp-controller="Product" asp-action="Index" class="btn btn-secondary border form-control" > Back to List</a>
        </div>
    </div>
</form>
</div>

       <div class="col-md-2" width="100%">
           <img src="@Model.Product.ImageUrl" style="border-radius:5px; border:1px solid #bbb9b9"/>
       </div>
   </div>
 </div>




@* Adding partialvalidationscripts for the client side validation which is automatically provided by the jquery *@

        @section Scripts{
            @{
                        <partial name="_ValidationScriptsPartial"/>

            }
         @*    Scripts for the Tiny text editor *@
                <script>
      tinymce.init({
        selector: 'textarea',
        plugins: [
          // Core editing features
          'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
          // Your account includes a free trial of TinyMCE premium features
          // Try the most popular premium features until Sep 16, 2024:
          'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
        ],
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough |  addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent ',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
          { value: 'First.Name', title: 'First Name' },
          { value: 'Email', title: 'Email' },
        ],
        ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
      });
    </script>
        }